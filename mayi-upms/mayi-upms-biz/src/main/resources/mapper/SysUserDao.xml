<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ /*
  ~  * Copyright (c) 2021 gngpp
  ~  *
  ~  * Permission is hereby granted, free of charge, to any person obtaining a copy
  ~  * of this software and associated documentation files (the "Software"), to deal
  ~  * in the Software without restriction, including without limitation the rights
  ~  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~  * copies of the Software, and to permit persons to whom the Software is
  ~  * furnished to do so, subject to the following conditions:
  ~  *
  ~  * The above copyright notice and this permission notice shall be included in all
  ~  * copies or substantial portions of the Software.
  ~  *
  ~  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING COMMUNICATION_AUTHORIZATION,
  ~  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~  * SOFTWARE.
  ~  *
  ~  */
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gngpp.mayi.upms.biz.dao.SysUserDao">
    <!--新增 user-job 依赖关系-->
    <insert id="savePositionRelationById">
        insert into sys_user_position_relation(user_id, position_id)
        values
        <foreach collection="jobIds" item="jobId" separator=",">
        (#{id}, #{jobId})
        </foreach>
    </insert>

    <!--新增 user-role 依赖关系-->
    <insert id="savaRoleRelationById">
        insert into sys_user_role_relation(user_id, role_id)
        values
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{id}, #{roleId})
        </foreach>
    </insert>

    <!--删除user-role 依赖关系-->
    <delete id="deleteRoleRelationById">
        delete
        from sys_user_role_relation
        where user_id =  #{id}
    </delete>

    <!--删除user-job 依赖关系-->
    <delete id="deletePositionRelationById">
        delete
        from sys_user_position_relation
        where user_id = #{id}
    </delete>

    <!--根据角色id集合查询关联用户id集合-->
    <select id="selectIdsByRoleIds" resultType="java.lang.Long">
        select distinct user_id
        from sys_user_role_relation
        where role_id
        in
        <foreach collection="roleIds" item="roleId" index="index" open="(" close=")" separator=",">
            #{roleId}
        </foreach>
    </select>

    <!--根据部门id集合查询关联用户id集合-->
    <select id="selectIdsByDepartmentIds" resultType="java.lang.Long">
        select distinct user_id
        from sys_user_role_relation join sys_role_department_relation srd
        on sys_user_role_relation.role_id = srd.role_id
        where srd.department_id
        in
        <foreach collection="departmentIds" item="departmentId" index="index" open="(" close=")" separator=",">
            #{departmentId}
        </foreach>
    </select>

    <!--    根据用户名查询用户，包括部门-->
    <resultMap id="selectOneByUsernameMap" type="com.gngpp.mayi.upms.biz.pojo.po.SysUser">
        <id property="id" column="id"/>
        <result property="departmentId" column="department_id"/>
        <association property="department" column="department_id"
                     select="com.gngpp.mayi.upms.biz.dao.SysDepartmentDao.selectById"/>
        <collection property="positionList" column="id"
                    select="com.gngpp.mayi.upms.biz.dao.SysPositionDao.selectListByUserId"/>
        <collection property="roleList" column="id"
                    select="com.gngpp.mayi.upms.biz.dao.SysRoleDao.selectListByUserId"/>
    </resultMap>
    <select id="selectOneByUsername" resultMap="selectOneByUsernameMap">
        select id,
               department_id,
               username,
               password,
               phone,
               email,
               gender,
               avatar_name,
               nick_name,
               version,
               enabled,
               update_time,
               update_by,
               create_time,
               create_by,
               pwd_reset_time
        from sys_user
        where sys_user.username = #{username}
    </select>
<!--    查询user-position关系ID-->
    <select id="selectPositionRelationById" resultType="java.lang.Long">
        select sys_user_position_relation.position_id
        from sys_user_position_relation left join sys_user on sys_user_position_relation.user_id = sys_user.id
        where sys_user.id = #{id}
    </select>
    <!--    查询user-关系ID-->
    <select id="selectRoleRelationById" resultType="java.lang.Long">
        select sys_user_role_relation.role_id
        from sys_user_role_relation left join sys_user on sys_user_role_relation.user_id = sys_user.id
        where sys_user.id = #{id}
    </select>
</mapper>
